---
name: container

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
    tags:
      - v*

permissions:
  contents: read
  packages: write

jobs:
  container:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          - platform: linux/386
            goos: linux
            goarch: 386
          - platform: linux/amd64
            goos: linux
            goarch: amd64
          - platform: linux/arm/6
            goos: linux
            goarch: arm
            goarm: 6
          - platform: linux/arm64
            goos: linux
            goarch: arm64

    steps:

      - name: GitHub App Token
        uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.PRIVATE_KEY }}

      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ steps.app-token.outputs.token }}

      - name: Setup golang
        id: golang
        uses: actions/setup-go@v5
        with:
          go-version: ^1.21

      - name: Run generate
        id: generate
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          GOARM: ${{ matrix.goarm }}
        run: make generate

      - name: Run build
        id: build
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          GOARM: ${{ matrix.goarm }}
        run: make build

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            cbrgm/pr-size-labeler-action
            quay.io/cbrgm/pr-size-labeler-action
            ghcr.io/cbrgm/pr-size-labeler-action
          labels: |
            org.opencontainers.image.vendor=cbrgm
            maintainer=Chris Bargmann <github@cbrgm.net>
          tags: |
            type=ref,event=pr
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/master' }}
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
          flavor: |
            suffix=-${{ matrix.goos }}-${{ matrix.goarch }}

      - name: Setup qemu
        id: qemu
        uses: docker/setup-qemu-action@v3

      - name: Setup buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Ghcr login
        id: login3
        uses: docker/login-action@v3
        if: github.event_name != 'pull_request'
        with:
          registry: ghcr.io
          username: ${{ steps.app-token.outputs.app-id }}
          password: ${{ steps.app-token.outputs.token }}

      - name: Build image
        id: publish
        uses: docker/build-push-action@v5
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          provenance: false
          file: docker/Dockerfile.${{ matrix.goos }}.${{ matrix.goarch }}
          platforms: ${{ matrix.platform }}
          push: ${{ github.event_name != 'pull_request' }}
          labels: ${{ steps.meta.outputs.labels }}
          tags: ${{ steps.meta.outputs.tags }}

  manifest:
    runs-on: ubuntu-latest
    needs: container
    if: github.event_name != 'pull_request'

    steps:
      - name: GitHub App Token
        uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.PRIVATE_KEY }}

      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ steps.app-token.outputs.token }}

      - name: Ghcr tags
        id: ghcrTags
        if: github.event_name != 'pull_request'
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/cbrgm/pr-size-labeler-action
          tags: |
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/master' }}
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}

      - name: Ghcr manifest
        id: ghcr
        if: github.event_name != 'pull_request'
        uses: actionhippie/manifest@v1
        with:
          username: ${{ steps.app-token.outputs.app-id }}
          password: ${{ steps.app-token.outputs.token }}
          platforms: linux/amd64,linux/386,linux/arm64,linux/arm/v6
          template: ghcr.io/cbrgm/pr-size-labeler-action:VERSION-OS-ARCH
          target: ${{ steps.ghcrTags.outputs.tags }}
          ignore_missing: true

